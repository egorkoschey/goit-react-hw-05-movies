{"version":3,"file":"static/js/ReviewView.f026be8d.chunk.js","mappings":"4JAMA,IAJiB,WACf,OAAOA,EAAAA,EAAAA,KAAA,KAAAC,SAAG,aACZ,C,+GCwBA,EAzBgB,SAAHC,GAAqB,IAAfC,EAAOD,EAAPC,QACjB,OACEH,EAAAA,EAAAA,KAAA,WAAAC,UACED,EAAAA,EAAAA,KAAA,MAAAC,SACGE,EAAQC,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAMF,EAANE,OAAQC,EAAOH,EAAPG,QAAO,OACjCC,EAAAA,EAAAA,MAAA,MAAAR,SAAA,EACEQ,EAAAA,EAAAA,MAAA,MAAAR,SAAA,CAAI,WAASM,MACbP,EAAAA,EAAAA,KAAA,KAAAC,SAAIO,MAFGF,EAGJ,OAKf,E,oBCMA,EAhBmB,WACjB,IAAQI,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCT,EAAOW,EAAA,GAAEE,EAAUF,EAAA,GAW1B,OATAG,EAAAA,EAAAA,YAAU,WACR,IAAIC,GAAY,EAGhB,OAFAC,EAAAA,EAAAA,IAAeT,GAASU,MAAK,SAAAC,GAAI,OAAKH,GAAaF,EAAWK,EAAK,IAE5D,WACLH,GAAY,CACd,CACF,GAAG,CAACR,KAEGV,EAAAA,EAAAA,KAAAsB,EAAAA,SAAA,CAAArB,SAAGE,EAAQoB,OAAS,GAAIvB,EAAAA,EAAAA,KAACwB,EAAO,CAACrB,QAASA,KAAcH,EAAAA,EAAAA,KAACyB,EAAAA,EAAQ,KAC1E,C","sources":["Components/MoreInfo/NotFound/NotFound.js","Components/MoreInfo/Reviews/Reviews.js","views/movieDetails/ReviewView.js"],"sourcesContent":["import React from 'react';\n\nconst NotFound = () => {\n  return <p>Not found</p>;\n};\n\nexport default NotFound;\n","import React from 'react';\nimport { PropTypes } from 'prop-types';\n\nconst Reviews = ({ reviews }) => {\n  return (\n    <section>\n      <ul>\n        {reviews.map(({ id, author, content }) => (\n          <li key={id}>\n            <h3>Author: {author}</h3>\n            <p>{content}</p>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nReviews.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default Reviews;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Reviews from '../../Components/MoreInfo/Reviews';\nimport { getReviewsInfo } from '../../api/api';\nimport NotFound from '../../Components/MoreInfo/NotFound/NotFound';\n\nconst ReviewView = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    let cancelled = false;\n    getReviewsInfo(movieId).then(data => !cancelled && setReviews(data));\n\n    return () => {\n      cancelled = true;\n    };\n  }, [movieId]);\n\n  return <>{reviews.length > 0 ? <Reviews reviews={reviews} /> : <NotFound />}</>;\n};\n\nexport default ReviewView;\n"],"names":["_jsx","children","_ref","reviews","map","_ref2","id","author","content","_jsxs","movieId","useParams","_useState","useState","_useState2","_slicedToArray","setReviews","useEffect","cancelled","getReviewsInfo","then","data","_Fragment","length","Reviews","NotFound"],"sourceRoot":""}